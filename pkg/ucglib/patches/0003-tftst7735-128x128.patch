From f29d219cea0d5ca7c1b2d1a7f5842067252a1f03 Mon Sep 17 00:00:00 2001
From: francisco <femolina@uc.cl>
Date: Sun, 7 Apr 2019 20:05:36 +0200
Subject: change st7735 size to 128x128

---
 Makefile.am                                   |  2 +-
 cppsrc/Ucglib.h                               |  4 ++--
 cppsrc_sdspi/Ucglib.h                         |  4 ++--
 csrc/ucg.h                                    |  2 +-
 csrc/ucg_dev_ic_st7735.c                      | 24 ++++++++++---------
 ..._st7735.c => ucg_dev_tft_128x128_st7735.c} | 14 +++++------
 6 files changed, 26 insertions(+), 24 deletions(-)
 rename csrc/{ucg_dev_tft_128x160_st7735.c => ucg_dev_tft_128x128_st7735.c} (88%)

diff --git a/Makefile.am b/Makefile.am
index 2b8c945..d1a5b46 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -53,7 +53,7 @@ SRC_BASE= \
     csrc/ucg_dev_tft_240x320_ili9341.c \
     csrc/ucg_dev_ic_ili9341.c \
     csrc/ucg_scale.c \
-    csrc/ucg_dev_tft_128x160_st7735.c \
+    csrc/ucg_dev_tft_128x128_st7735.c \
     csrc/ucg_clip.c \
     csrc/ucg_dev_msg_api.c \
     csrc/ucg_init.c \
diff --git a/cppsrc/Ucglib.h b/cppsrc/Ucglib.h
index ee7157a..a444444 100644
--- a/cppsrc/Ucglib.h
+++ b/cppsrc/Ucglib.h
@@ -298,7 +298,7 @@ class Ucglib_ST7735_18x128x160_HWSPI : public Ucglib4WireHWSPI
 {
   public:
   Ucglib_ST7735_18x128x160_HWSPI( uint8_t cd, uint8_t cs = UCG_PIN_VAL_NONE, uint8_t reset = UCG_PIN_VAL_NONE) : 
-    Ucglib4WireHWSPI(ucg_dev_st7735_18x128x160, ucg_ext_st7735_18, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
+    Ucglib4WireHWSPI(ucg_dev_st7735_18x128x128, ucg_ext_st7735_18, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
     { }
 };
 
@@ -306,7 +306,7 @@ class Ucglib_ST7735_18x128x160_SWSPI : public Ucglib4WireSWSPI
 {
   public:
   Ucglib_ST7735_18x128x160_SWSPI( uint8_t scl, uint8_t sda, uint8_t cd, uint8_t cs = UCG_PIN_VAL_NONE, uint8_t reset = UCG_PIN_VAL_NONE) : 
-    Ucglib4WireSWSPI(ucg_dev_st7735_18x128x160, ucg_ext_st7735_18, /*scl=*/ scl, /*sda=*/ sda, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
+    Ucglib4WireSWSPI(ucg_dev_st7735_18x128x128, ucg_ext_st7735_18, /*scl=*/ scl, /*sda=*/ sda, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
     { }
 };
 
diff --git a/cppsrc_sdspi/Ucglib.h b/cppsrc_sdspi/Ucglib.h
index acd51f1..3a33257 100644
--- a/cppsrc_sdspi/Ucglib.h
+++ b/cppsrc_sdspi/Ucglib.h
@@ -293,7 +293,7 @@ class Ucglib_ST7735_18x128x160_HWSPI : public Ucglib4WireHWSPI
 {
   public:
   Ucglib_ST7735_18x128x160_HWSPI( uint8_t cd, uint8_t cs = UCG_PIN_VAL_NONE, uint8_t reset = UCG_PIN_VAL_NONE) : 
-    Ucglib4WireHWSPI(ucg_dev_st7735_18x128x160, ucg_ext_st7735_18, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
+    Ucglib4WireHWSPI(ucg_dev_st7735_18x128x128, ucg_ext_st7735_18, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
     { }
 };
 
@@ -301,7 +301,7 @@ class Ucglib_ST7735_18x128x160_SWSPI : public Ucglib4WireSWSPI
 {
   public:
   Ucglib_ST7735_18x128x160_SWSPI( uint8_t scl, uint8_t sda, uint8_t cd, uint8_t cs = UCG_PIN_VAL_NONE, uint8_t reset = UCG_PIN_VAL_NONE) : 
-    Ucglib4WireSWSPI(ucg_dev_st7735_18x128x160, ucg_ext_st7735_18, /*scl=*/ scl, /*sda=*/ sda, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
+    Ucglib4WireSWSPI(ucg_dev_st7735_18x128x128, ucg_ext_st7735_18, /*scl=*/ scl, /*sda=*/ sda, /*cd=*/ cd , /*cs=*/ cs, /*reset=*/ reset)
     { }
 };
 
diff --git a/csrc/ucg.h b/csrc/ucg.h
index f92a8b5..7bae4ee 100644
--- a/csrc/ucg.h
+++ b/csrc/ucg.h
@@ -163,7 +163,7 @@ ucg_int_t ucg_dev_ili9341_18x240x320(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_hx8352c_18x240x400(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_ili9486_18x320x480(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_ili9163_18x128x128(ucg_t *ucg, ucg_int_t msg, void *data);
-ucg_int_t ucg_dev_st7735_18x128x160(ucg_t *ucg, ucg_int_t msg, void *data);
+ucg_int_t ucg_dev_st7735_18x128x128(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_pcf8833_16x132x132(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_ld50t6160_18x160x128_samsung(ucg_t *ucg, ucg_int_t msg, void *data);
 ucg_int_t ucg_dev_ssd1331_18x96x64_univision(ucg_t *ucg, ucg_int_t msg, void *data);
diff --git a/csrc/ucg_dev_ic_st7735.c b/csrc/ucg_dev_ic_st7735.c
index c9586ab..b40fcf5 100644
--- a/csrc/ucg_dev_ic_st7735.c
+++ b/csrc/ucg_dev_ic_st7735.c
@@ -42,8 +42,8 @@ const ucg_pgm_uint8_t ucg_st7735_set_pos_seq[] =
 {
   UCG_CS(0),					/* enable chip */
   UCG_C11( 0x036, 0x000),
-  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f),					/* set x position */
-  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x09f),		/* set y position */
+  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 2),					/* set x position */
+  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 1),		/* set y position */
   UCG_C10(0x02c),							/* write to RAM */
   UCG_DATA(),								/* change to data mode */
   UCG_END()
@@ -59,8 +59,8 @@ const ucg_pgm_uint8_t ucg_st7735_set_pos_dir0_seq[] =
   /* 0x040 horizontal deccrement (dir = 2) */
   /* 0x080 vertical deccrement (dir = 3) */
   UCG_C11( 0x036, 0x000),
-  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f),					/* set x position */
-  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x09f),		/* set y position */
+  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 2),					/* set x position */
+  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 1),		/* set y position */
 
   UCG_C10(0x02c),							/* write to RAM */
   UCG_DATA(),								/* change to data mode */
@@ -76,7 +76,7 @@ const ucg_pgm_uint8_t ucg_st7735_set_pos_dir1_seq[] =
   /* 0x080 vertical deccrement (dir = 3) */
   UCG_C11( 0x036, 0x000),
   UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0),					/* set x position */
-  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x09f),		/* set y position */
+  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 1),		/* set y position */
 
   UCG_C10(0x02c),							/* write to RAM */
   UCG_DATA(),								/* change to data mode */
@@ -94,8 +94,8 @@ const ucg_pgm_uint8_t ucg_st7735_set_pos_dir2_seq[] =
   
   UCG_C11( 0x036, 0x040),
   UCG_C11( 0x036, 0x040),			/* it seems that this command needs to be sent twice */
-  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f),					/* set x position */
-  UCG_C10(0x02b),	UCG_VARY(8,0x01, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x09f),		/* set y position */
+  UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 2),					/* set x position */
+  UCG_C10(0x02b),	UCG_VARY(8,0x01, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 1),		/* set y position */
 
   UCG_C10(0x02c),							/* write to RAM */
   UCG_DATA(),								/* change to data mode */
@@ -113,7 +113,7 @@ const ucg_pgm_uint8_t ucg_st7735_set_pos_dir3_seq[] =
   UCG_C11( 0x036, 0x080),
   UCG_C11( 0x036, 0x080),		/* it seems that this command needs to be sent twice */
   UCG_C10(0x02a),	UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0), UCG_VARX(0,0x00, 0), UCG_VARX(0,0x0ff, 0),					/* set x position */
-  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x09f),		/* set y position */
+  UCG_C10(0x02b),	UCG_VARY(0,0x00, 0), UCG_VARY(0,0x0ff, 0), UCG_A2(0x000, 0x07f + 1),		/* set y position */
 
   UCG_C10(0x02c),							/* write to RAM */
   UCG_DATA(),								/* change to data mode */
@@ -143,7 +143,7 @@ ucg_int_t ucg_handle_st7735_l90fx(ucg_t *ucg)
       case 3: 
       default: 
 	tmp = ucg->arg.pixel.pos.y;
-	ucg->arg.pixel.pos.y = 159-tmp;
+	ucg->arg.pixel.pos.y = 127-tmp;
 	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir3_seq);	
 	ucg->arg.pixel.pos.y = tmp;
 	break;
@@ -287,7 +287,7 @@ ucg_int_t ucg_handle_st7735_l90se(ucg_t *ucg)
       case 3: 
       default: 
 	tmp = ucg->arg.pixel.pos.y;
-	ucg->arg.pixel.pos.y = 159-tmp;
+	ucg->arg.pixel.pos.y = 127-tmp;
 	ucg_com_SendCmdSeq(ucg, ucg_st7735_set_pos_dir3_seq);	
 	ucg->arg.pixel.pos.y = tmp;
 	break;
@@ -325,13 +325,15 @@ ucg_int_t ucg_dev_ic_st7735_18(ucg_t *ucg, ucg_int_t msg, void *data)
     case UCG_MSG_DEV_POWER_UP:
       /* setup com interface and provide information on the clock speed */
       /* of the serial and parallel interface. Values are nanoseconds. */
+        ucg->display_offset.x = 2;
+        ucg->display_offset.y = 1;
       return ucg_com_PowerUp(ucg, 100, 66);
     case UCG_MSG_DEV_POWER_DOWN:
       ucg_com_SendCmdSeq(ucg, ucg_st7735_power_down_seq);
       return 1;
     case UCG_MSG_GET_DIMENSION:
       ((ucg_wh_t *)data)->w = 128;
-      ((ucg_wh_t *)data)->h = 160;
+      ((ucg_wh_t *)data)->h = 128;
       return 1;
     case UCG_MSG_DRAW_PIXEL:
       if ( ucg_clip_is_pixel_visible(ucg) !=0 )
diff --git a/csrc/ucg_dev_tft_128x160_st7735.c b/csrc/ucg_dev_tft_128x128_st7735.c
similarity index 88%
rename from csrc/ucg_dev_tft_128x160_st7735.c
rename to csrc/ucg_dev_tft_128x128_st7735.c
index 0f7c52d..e941a05 100644
--- a/csrc/ucg_dev_tft_128x160_st7735.c
+++ b/csrc/ucg_dev_tft_128x128_st7735.c
@@ -1,6 +1,6 @@
 /*
 
-  ucg_dev_tft_128x160_st7735.c
+  ucg_dev_tft_128x128_st7735.c
   
   ST7735 with 4-Wire SPI (SCK, SDI, CS, D/C and optional reset)
 
@@ -38,7 +38,7 @@
 #include "ucg.h"
 
 //static const uint8_t ucg_dev_ssd1351_128x128_init_seq[] PROGMEM = {
-static const ucg_pgm_uint8_t ucg_tft_128x160_st7735_init_seq[] = {
+static const ucg_pgm_uint8_t ucg_tft_128x128_st7735_init_seq[] = {
   UCG_CFG_CD(0,1),				/* DC=0 for command mode, DC=1 for data and args */
   UCG_RST(1),					
   UCG_CS(1),					/* disable chip */
@@ -73,8 +73,8 @@ static const ucg_pgm_uint8_t ucg_tft_128x160_st7735_init_seq[] = {
 
   UCG_C11( 0x036, 0x000),		/* memory control */
   
-  UCG_C14(  0x02a, 0x000, 0x000, 0x000, 0x07f),              /* Horizontal GRAM Address Set */
-  UCG_C14(  0x02b, 0x000, 0x000, 0x000, 0x09f),              /* Vertical GRAM Address Set */
+  UCG_C14(  0x02a, 0x000, 0x000, 0x000, 0x07f + 2),              /* Horizontal GRAM Address Set */
+  UCG_C14(  0x02b, 0x000, 0x000, 0x000, 0x07f + 1),              /* Vertical GRAM Address Set */
   UCG_C10(  0x02c),               /* Write Data to GRAM */
 
   
@@ -82,7 +82,7 @@ static const ucg_pgm_uint8_t ucg_tft_128x160_st7735_init_seq[] = {
   UCG_END(),					/* end of sequence */
 };
 
-ucg_int_t ucg_dev_st7735_18x128x160(ucg_t *ucg, ucg_int_t msg, void *data)
+ucg_int_t ucg_dev_st7735_18x128x128(ucg_t *ucg, ucg_int_t msg, void *data)
 {
   switch(msg)
   {
@@ -92,7 +92,7 @@ ucg_int_t ucg_dev_st7735_18x128x160(ucg_t *ucg, ucg_int_t msg, void *data)
 	return 0;
 
       /* 2. Send specific init sequence for this display module */
-      ucg_com_SendCmdSeq(ucg, ucg_tft_128x160_st7735_init_seq);
+      ucg_com_SendCmdSeq(ucg, ucg_tft_128x128_st7735_init_seq);
       
       return 1;
       
@@ -102,7 +102,7 @@ ucg_int_t ucg_dev_st7735_18x128x160(ucg_t *ucg, ucg_int_t msg, void *data)
     
     case UCG_MSG_GET_DIMENSION:
       ((ucg_wh_t *)data)->w = 128;
-      ((ucg_wh_t *)data)->h = 160;
+      ((ucg_wh_t *)data)->h = 128;
       return 1;
   }
   
-- 
2.21.0

